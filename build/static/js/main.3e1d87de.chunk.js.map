{"version":3,"sources":["Firebase/firbase.js","Provider/StateProvider.js","Components/Dropdown.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","props","useState","user","setUser","useEffect","onAuthStateChanged","Provider","value","children","Dropdown","options","prompt","onChange","maxItems","open","setOpen","query","setQuery","items","setItems","remainingItems","length","toggleItem","setToggleItem","useContext","filter","option","name","toLowerCase","indexOf","className","onClick","prevState","type","placeholder","e","target","signInWithPopup","then","res","catch","error","console","log","message","slice","map","key","id","App","api","axios","create","baseURL","countries","setCountries","setVal","a","get","data","style","width","val","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3e1d87de.chunk.js","sourcesContent":["// config file\r\nimport firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyChrE4vabWJzwxhZYvQzZ732nUnwlxqG_s\",\r\n    authDomain: \"dropdown-3fc31.firebaseapp.com\",\r\n    projectId: \"dropdown-3fc31\",\r\n    storageBucket: \"dropdown-3fc31.appspot.com\",\r\n    messagingSenderId: \"249167116685\",\r\n    appId: \"1:249167116685:web:9725bfae6a991b681325c4\",\r\n    measurementId: \"G-6D2LB1Y7MK\"\r\n  };\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport { auth } from \"../Firebase/firbase\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = (props) => {\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  // user login\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(setUser);\r\n  }, []);\r\n\r\n  return (\r\n    <StateContext.Provider value={[user, setUser]}>\r\n      {props.children}\r\n    </StateContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { auth, provider } from \"../Firebase/firbase\";\r\nimport \"./styles.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\n// Data Provider\r\nimport { StateContext } from \"../Provider/StateProvider\";\r\n\r\nexport default function Dropdown({ options,value, prompt, onChange ,maxItems }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [items, setItems] = useState(maxItems);\r\n  const remainingItems = options.length - items;\r\n  const [toggleItem, setToggleItem] = useState(true);\r\n\r\n  // user previlages\r\n  const [user, setUser] = useContext(StateContext);\r\n\r\n  // user login\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((res) => {\r\n        setUser(res.user);\r\n      })\r\n      .catch((error) => console.log(error.message));\r\n  };\r\n\r\n  \r\n\r\n  function filter(options) {\r\n    return options.filter(\r\n      (option) => option.name.toLowerCase().indexOf(query?.toLowerCase()) > -1\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <div\r\n        className=\"head__control\"\r\n        onClick={() => setOpen((prevState) => !prevState)}\r\n      >\r\n        <div className=\"selected__value\">{value ? value.name : prompt}</div>\r\n        <div className={`down__arrow ${open ? \"open\" : null}`}></div>\r\n      </div>\r\n      <div className={`options ${open ? \"open\" : null}`}>\r\n        <div className=\"search__box\">\r\n          <input\r\n            className=\"search\"\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            value={query}\r\n            onChange={(e) => {\r\n              setQuery(e.target.value);\r\n              setToggleItem(false);\r\n            }}\r\n          />\r\n        </div>\r\n        {filter(options).length === 0 ? (\r\n          <div className=\"option\">\r\n            \"{query}\" not found\r\n            {/* user logged-in should show this add button option */}\r\n            {user === null ? <button className=\"add__button\" onClick={signIn}>Login</button> : <button className=\"add__button\">Add & Select</button>}\r\n          </div>\r\n        ) : (\r\n          filter(options)\r\n            .slice(0, items)\r\n            .map((option) => (\r\n              <div className=\"option\" key={option.id} onClick={() => {\r\n                onChange(option);\r\n              }} >\r\n                {/* last option inthe dropdown */}\r\n                {option.id === items - 1 ? (\r\n                  <div>\r\n                    {option.name}\r\n                    <div\r\n                      className=\"more__items\"\r\n                      onClick={() => {\r\n                        setItems(options.length);\r\n                        setToggleItem(false);\r\n                      }}\r\n                    >\r\n                      {toggleItem === true || query === \"\"\r\n                        ? `${remainingItems} more..`\r\n                        : \" \"}\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  option.name\r\n                )}\r\n              </div>\r\n            ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// propTypes check \r\nDropdown.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string\r\n  })),\r\n  value: PropTypes.object,\r\n  prompt: PropTypes.string, \r\n  onChange: PropTypes.func,\r\n  maxItems: PropTypes.number\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport Dropdown from \"./Components/Dropdown\";\nimport \"./style.css\";\nimport axios from \"axios\";\n\nexport default function App() {\n  // Mock API\n  const api = axios.create({\n    baseURL: `https://5fe0e88d04f0780017de96fc.mockapi.io/v3/countries`\n  });\n  \n  const [countries, setCountries] = useState([]);\n  const [value, setVal] = useState(null)\n\n  // always good to make an API call at ComponentDidMount lifecycle\n  // it's better to practice calling API async & managing the response with try catch block\n  useEffect(() => {\n    (async () => {\n      try{\n        const data = await api.get(\"/\").then(({ data }) => data);\n        setCountries(data);\n      }catch(error) {\n        console.log(error)\n      }\n    })()\n      \n  }, [])\n\n  // the parent should log the selected the country\n  console.log(\"From the parent\",value);\n\n  return (\n    <div className=\"app__container\" style={{ width: 450 }}>\n      <Dropdown \n      options={countries} \n      prompt=\"Select a location\" \n      maxItems={4} \n      value = {value}\n      onChange = {val => setVal(val)}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { StateProvider } from \"./Provider/StateProvider\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}